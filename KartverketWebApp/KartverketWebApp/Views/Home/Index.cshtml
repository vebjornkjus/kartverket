@using Newtonsoft.Json
@{
    ViewData["Title"] = "Home Page";
}
@model KartverketWebApp.Models.PositionModel
@* @model KartverketWebApp.Models.SokeModel *@

<div class="app_main">
    <div class="map_selection_container">
        <div class="map_selector">
            <div class="map_selector_img">
                <img src="~/images/kartogkompass.jpg" />
            </div>
            <div onclick="MapSelect1()" class="map_selector_text">
            <h1>Norge kart</h1>
            <p>Har du vært på tur og oppdaget noe
                som bør rettes eller oppdateres i
                kartet? Er det et stedsnavn som er
                feilplassert i kartet, som mangler
                eller som er skrevet feil?
            </p>
            </div>
        </div>
        <div class="map_selector">
            <div class="map_selector_img">
            <img src="~/images/img_0269.jpg" />
            </div>
            <div onclick="MapSelect2()" class="map_selector_text">
            <h1>Turkart</h1>
            <p>
                Har du merket, skiltet eller 
                tilrettelagt en turrute? Legg den inn
                i den nasjonale databasen for
                turruter!
            </p>
            </div>
        </div>
        <div class="map_selector">
            <div class="map_selector_img">
                <img src="~/images/sjokart.jpg" />
            </div>
            <div onclick="MapSelect3()" class="map_selector_text">
            <h1>Sjøkart</h1>
            <p>
                Har du oppdaget en uregistrert
                grunne eller observert andre
                mangler eller i sjøkartet? Meld det
                inn her så hjelper du andre
                sjøfarende.
            </p>
            </div>
        </div>
    </div>
    <div class="map_container_hidden">
        <div id="map"></div>
        <div class="center-container">
                <div id="sok_background">
                    <form id="sokeForm" asp-action="Sok" method="post">
                        @Html.AntiForgeryToken()
                        <input type="text" name="kommuneName" id="kommuneName" />
                    </form>
                </div>
            <button class="btn_map_transform">Rapporter</button>
        </div>  
    </div>
    <div class="form_area">
        <div class="form_container">
            <form asp-action="Index" method="post" id="form_id">
                @Html.AntiForgeryToken()
                <table id="form_table">
                    <tr>
                        <td>
                            <div id="form_tittel">
                                <label for="tittel">Tittel</label><br />
                                <input type="text" id="tittel" name="tittel" />
                            </div>
                        </td>

                     </tr>
                    <tr>
                        <td>
                            <div id="form_option">
                                <select id="rapport_type" name="rapportType">
                                    <option value="" disabled selected>
                                        Velg rapport kategori...
                                    </option>
                                    <option value="Gjengrodd vei">
                                        Gjengrodd vei
                                    </option>
                                    <option value="Sti på eiendom">
                                        Sti på eiendom
                                    </option>
                                    <option value="Annet">
                                        Annet
                                    </option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form_description">
                                <label for="description">Description</label>
                                <textarea id="description" name="beskrivelse" class="form-control"></textarea>
                            </div>
                        </td>

                    </tr>
                </table>

            </form>
            <div class="submit_container">
                <button type="submit" class="btn_submit" form="form_id">Rapporter</button>
            </div>
            <input type="hidden" id="mapType" name="mapType" form="form_id"/>
            <input type="hidden" name="koordsys" value="4258" form="form_id" />
        </div>
    </div>

    </div>
</div>
<div class="green_bar"></div>

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
        <div class="alert alert-danger">
        @ViewBag.ErrorMessage
        </div>
}

<script>
    // Define different map layers
    var norgeKart = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
        attribution: '&copy; <a href="https://www.kartverket.no/">Kartverket</a>'
    });

    var turKart = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/toporaster/default/webmercator/{z}/{y}/{x}.png', {
        attribution: '&copy; <a href="https://www.kartverket.no/">Kartverket</a>'
    });

    var sjoKart = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/sjokartraster/default/webmercator/{z}/{y}/{x}.png', {
        attribution: '&copy; <a href="https://www.kartverket.no/">Kartverket</a>'
    });

    var background = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">Kartverket</a>',
        zIndex: 0
    });

    // Initial map setup
    var map = L.map('map', {
        center: [62.15, 8.5],
        zoom: 5,
        layers: [norgeKart, background]
    });

    function locateUser() {
        map.locate({
            setView: true,
            maxZoom: 18
        }).on('locationerror', function (e) {
            // Display an alert with a custom error message
            alert("Kunne ikke hente geolokasjon. Sjekk at enheten din har geolokasjon aktivert og gi tillatelse for plassering.");
        });
    }
    
    //bytter ut map_selection_container med map_container for å vise kartet etter et kart blir valgt
    const map_selector1 = document.querySelector('.map_container_hidden');
    const map_selector2 = document.querySelector('.map_selection_container');

    function MapSelect1() {
        map.removeLayer(turKart);
        map.removeLayer(sjoKart);
        map.addLayer(norgeKart);

        map_selector1.classList.remove('map_container_hidden');
        map_selector1.classList.add('map_container');
        map_selector2.classList.add('map_selection_container_hidden');

        setTimeout(function () {
            map.invalidateSize();
        }, 50);

        //setter verdi for i kart type i form
        document.getElementById('mapType').value = "Norge kart";
    }

    function MapSelect2() {
        map.removeLayer(norgeKart); 
        map.removeLayer(sjoKart);
        map.addLayer(turKart); 

        map_selector1.classList.remove('map_container_hidden');
        map_selector1.classList.add('map_container');
        map_selector2.classList.add('map_selection_container_hidden');

        setTimeout(function () {
            map.invalidateSize();
        }, 50);

        //setter verdi for i for kart type i form
        document.getElementById('mapType').value = "Turkart";
    }

    function MapSelect3() {
        map.removeLayer(norgeKart);
        map.removeLayer(turKart);
        map.addLayer(sjoKart);
       
        map_selector1.classList.remove('map_container_hidden');
        map_selector1.classList.add('map_container');
        map_selector2.classList.add('map_selection_container_hidden');

        setTimeout(function () {
            map.invalidateSize();
        }, 50);

        //setter verdi for i for kart type i form
        document.getElementById('mapType').value = "Sjøkart";
    }


    //Fjerner jnapp etter den blir tykket på og trasformerer map_container til å innehode form_area
    //etter knappen blir trykket på
    const button = document.querySelector('.btn_map_transform');
    const div1 = document.querySelector('.map_container_hidden');
    const div2 = document.querySelector('.form_area');
    const div3 = document.querySelector('.app_main');
    const div4 = document.querySelector('.btn_map_transform');


    button.addEventListener('click', function () {
        // Toggle the 'transformed' class on the div
        div1.classList.toggle('map_container_transform');
        div2.classList.toggle('form_area_transform');
        div3.classList.toggle('app_main_transform');
        div4.classList.remove('btn_map');
        div4.classList.add('btn_map_transform');


    });

    var locateControl = L.control({ position: 'topleft' });

    locateControl.onAdd = function (map) {
        var div = L.DomUtil.create('div', 'leaflet-bar');
        div.innerHTML = '<button id="location" title="Hvor er jeg?" onclick="locateUser()">📍</button>'; // Add icon or text for the button
        L.DomEvent.disableClickPropagation(div);

        return div;
    };

    // Add the control to the map
    locateControl.addTo(map);

    var drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);

    // Creates the drawing control on the left hand side
    // The drawing control enables drawing of markers, polygons, and polylines
    var drawControl = new L.Control.Draw({
        position: 'topleft',
        draw: {
            polygon: false,
            polyline: true,
            marker: false,
            circle: false,
            circlemarker: false, 
            rectangle: false
        },
        edit: {
            featureGroup: drawnItems
        }
    });
    map.addControl(drawControl);


    // Event handling when a layer is drawn on the map
    map.on(L.Draw.Event.CREATED, function (e) {
        var type = e.layerType,
            layer = e.layer;

        drawnItems.addLayer(layer);

        // Get the GeoJSON representation of the drawn layer
        var geoJsonData = layer.toGeoJSON();

        // Extract coordinates as separate latitude and longitude lists
        var latitudes = [];
        var longitudes = [];
        geoJsonData.geometry.coordinates.forEach(function (coord) {
            latitudes.push(coord[1]); // Latitude is the second element in each coordinate pair
            longitudes.push(coord[0]); // Longitude is the first element in each coordinate pair
        });

        // Remove any existing coordinates inputs
        document.querySelectorAll(".coordinate-input").forEach((el) => el.remove());

        // Dynamically create hidden fields for each coordinate pair
        latitudes.forEach((latitude, index) => {
            let latInput = document.createElement("input");
            latInput.type = "hidden";
            latInput.name = `koordinater[${index}].Nord`; // Matches the parameter name and structure
            latInput.value = latitude;
            latInput.classList.add("coordinate-input");

            let lonInput = document.createElement("input");
            lonInput.type = "hidden";
            lonInput.name = `koordinater[${index}].Ost`; // Matches the parameter name and structure
            lonInput.value = longitudes[index];
            lonInput.classList.add("coordinate-input");

            document.getElementById("form_id").appendChild(latInput);
            document.getElementById("form_id").appendChild(lonInput);
        });

    });

    map.on('draw:created', function (e) {
        // When the drawing is finished, the event is triggered

        // Access the layer (e.g., polygon, polyline) created by the user
        var layer = e.layer;

        // Add the layer to the map (optional, if you need it to appear on the map)
        map.addLayer(layer);

        // Access your div element and modify its classes
        div4.classList.remove('btn_map_transform');
        div4.classList.add('btn_map');
    });

</script>
